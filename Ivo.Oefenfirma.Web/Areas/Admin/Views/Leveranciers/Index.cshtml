@model IEnumerable<Ivo.OefenfirmaCMS.lib.Entities.Leverancier>
@helper Truncate(string input, int length)
{
    if (input.Length <= length)
    {
            @Html.Raw(input)
    }
    else
    {
            @Html.Raw(input.Substring(0, length))<text>...</text>
    }
}

@{
    ViewBag.Title = "Index";
}

<h2>Bewerk Leverancier</h2>

<p>
    @Html.ActionLink("Voeg een leverancier toe", "Create")
</p>
<table class="table">
    <tr>
        @*<th>
            @Html.DisplayNameFor(model => model.Gebruikersnaam)
        </th>*@
        
        <th>
            @Html.DisplayNameFor(model => model.Email)
        </th>
       <th>
            @Html.DisplayNameFor(model => model.PhoneNumber)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LeverancierDatum)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LeverancierID)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LeverancierNaam)
        </th>
        <th>BEWERKEN</th>
    </tr>

@foreach (var item in Model) {
    <tr>
        @*<td>
            @Html.DisplayFor(modelItem => item.Gebruikersnaam)
        </td>*@
        
        <td>
            @*@Html.DisplayFor(modelItem => item.Email)*@
            @Truncate(item.Email, 10)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.PhoneNumber)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.LeverancierDatum)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.LeverancierID)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.LeverancierNaam)
        </td>
        <td>
            @Html.ActionLink("Wijzig", "Edit", new { id=item.GebruikerId }) |
            @Html.ActionLink("Details", "Details", new { id=item.GebruikerId }) |
            @Html.ActionLink("Verwijder", "Delete", new { id=item.GebruikerId })
        </td>
    </tr>
}

</table>
